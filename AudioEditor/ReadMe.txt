1.Аудиоредактор с пользовательским интерфейсом, с возможностями воспроизведения,
ускорения трека, увеличения громкости трека, наложения треков друг на друга,
склеивания треков, выбора фрагмента трека визуально и сохранения всего 
вышеперечисленного.
Для корректной работы необходимо:
• Python 3.6.0 
• Библиотеки PyQt5, scipy, pygame, numpy
установить их - pip install -r requirements.txt

2.Автор - Михаил Казаков, студент 2го курса ИЕНИМ, КН-202.

3.Запуск аудиоредактора - gui_audio.py
Логика операций - audio_logic.py
Тесты - audio_tests.py
Рисование изображения wav - audio_draw.py
Связующий компонент между логикой и интерфейсом - audio.py
Запуск в консоле: py -3 gui_audio.py
Запуск в консоле с параметрами: py -3 gui_audio.py -t -s -v -f -e
-t TRACK, --track TRACK - Выберете трек! (по умолчанию main.wav)
-s SPEED, --speed SPEED -  Изменение скорости воспроизведения (по умолчанию 0)
-v VOLUME, --volume VOLUME - Изменение громкости звука (по умолчанию 0)
-f FIRST, --first FIRST - Начало среза композиции (по умолчанию 0)
-e END, --end END - Конец среза композиции(по умолчанию 100)

4.При запуске можно увидеть разные поля ввода данных.
Выбрать трек формата wav,воспроизвести его - появится изображения с волной
wav-файла, на которой можно выбрать размер фрагмента путем зажатия(начало
фрагмента) и отжатия(конец фрагмента) кнопки мыши, и нажать кнопку "Редактировать
фрагмент"(по умолчанию от 0% до 100% длинны трека).
Изменения трека происходит в соответствующих полях, если убрать метку с поля 
"Обрезать трек", то в соответствующих окнах будут значения 0 и 100.
Склейка трека аналогична конкатенции строк, однако ввиду особенностей wav-файлов
частота трека всегда будет одинаковой, поэтому и скорость воспроизведения трека
на всех участках будет одинаковой.
Наложение трека так же имеет одинаковую частоту дискретизации.
Все сохраненные файлы имеют формат wav, кроме изображения трека(wave.png),
хранятся в папке с проектами.

5.В файле audio.py происходит непосредственная обработка трека, а также обработка
сигналов пользователя, посылаемых в виде специального поля - code_run, благодаря
которой происходят логические операции над треками.В файле gui_audio.py отрисовка
пользовательского интерфейса, назначение кнопок, полей, а также парсер аргументов
командной строки.Воспроизведение происходит из-за библиотки pygame в audio.py.